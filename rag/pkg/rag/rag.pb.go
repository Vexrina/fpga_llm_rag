// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: api/rag.proto

package rag

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на добавление документа
type AddDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Embedding     []float32              `protobuf:"fixed32,4,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDocumentRequest) Reset() {
	*x = AddDocumentRequest{}
	mi := &file_api_rag_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentRequest) ProtoMessage() {}

func (x *AddDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentRequest.ProtoReflect.Descriptor instead.
func (*AddDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{0}
}

func (x *AddDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddDocumentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddDocumentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddDocumentRequest) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *AddDocumentRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Ответ на добавление документа
type AddDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDocumentResponse) Reset() {
	*x = AddDocumentResponse{}
	mi := &file_api_rag_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentResponse) ProtoMessage() {}

func (x *AddDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentResponse.ProtoReflect.Descriptor instead.
func (*AddDocumentResponse) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{1}
}

func (x *AddDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddDocumentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Запрос на поиск документов
type SearchRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Query               string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit               int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	SimilarityThreshold float32                `protobuf:"fixed32,3,opt,name=similarity_threshold,json=similarityThreshold,proto3" json:"similarity_threshold,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_api_rag_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetSimilarityThreshold() float32 {
	if x != nil {
		return x.SimilarityThreshold
	}
	return 0
}

// Ответ на поиск документов
type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*DocumentResult      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalFound    int32                  `protobuf:"varint,2,opt,name=total_found,json=totalFound,proto3" json:"total_found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_api_rag_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetResults() []*DocumentResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetTotalFound() int32 {
	if x != nil {
		return x.TotalFound
	}
	return 0
}

// Результат поиска документа
type DocumentResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content         string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	SimilarityScore float32                `protobuf:"fixed32,4,opt,name=similarity_score,json=similarityScore,proto3" json:"similarity_score,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DocumentResult) Reset() {
	*x = DocumentResult{}
	mi := &file_api_rag_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentResult) ProtoMessage() {}

func (x *DocumentResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentResult.ProtoReflect.Descriptor instead.
func (*DocumentResult) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DocumentResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DocumentResult) GetSimilarityScore() float32 {
	if x != nil {
		return x.SimilarityScore
	}
	return 0
}

func (x *DocumentResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Запрос на получение документа
type GetDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	mi := &file_api_rag_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{5}
}

func (x *GetDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Ответ с документом
type GetDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Document      *DocumentResult        `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentResponse) Reset() {
	*x = GetDocumentResponse{}
	mi := &file_api_rag_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentResponse) ProtoMessage() {}

func (x *GetDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{6}
}

func (x *GetDocumentResponse) GetDocument() *DocumentResult {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *GetDocumentResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

// Запрос на удаление документа
type DeleteDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentRequest) Reset() {
	*x = DeleteDocumentRequest{}
	mi := &file_api_rag_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRequest) ProtoMessage() {}

func (x *DeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Ответ на удаление документа
type DeleteDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentResponse) Reset() {
	*x = DeleteDocumentResponse{}
	mi := &file_api_rag_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentResponse) ProtoMessage() {}

func (x *DeleteDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentResponse.ProtoReflect.Descriptor instead.
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteDocumentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Запрос статистики индекса
type GetIndexStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIndexStatsRequest) Reset() {
	*x = GetIndexStatsRequest{}
	mi := &file_api_rag_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIndexStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexStatsRequest) ProtoMessage() {}

func (x *GetIndexStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexStatsRequest.ProtoReflect.Descriptor instead.
func (*GetIndexStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{9}
}

// Ответ со статистикой индекса
type GetIndexStatsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalDocuments int32                  `protobuf:"varint,1,opt,name=total_documents,json=totalDocuments,proto3" json:"total_documents,omitempty"`
	IndexSizeBytes int64                  `protobuf:"varint,2,opt,name=index_size_bytes,json=indexSizeBytes,proto3" json:"index_size_bytes,omitempty"`
	LastUpdated    string                 `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetIndexStatsResponse) Reset() {
	*x = GetIndexStatsResponse{}
	mi := &file_api_rag_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIndexStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexStatsResponse) ProtoMessage() {}

func (x *GetIndexStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rag_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexStatsResponse.ProtoReflect.Descriptor instead.
func (*GetIndexStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_rag_proto_rawDescGZIP(), []int{10}
}

func (x *GetIndexStatsResponse) GetTotalDocuments() int32 {
	if x != nil {
		return x.TotalDocuments
	}
	return 0
}

func (x *GetIndexStatsResponse) GetIndexSizeBytes() int64 {
	if x != nil {
		return x.IndexSizeBytes
	}
	return 0
}

func (x *GetIndexStatsResponse) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

var File_api_rag_proto protoreflect.FileDescriptor

const file_api_rag_proto_rawDesc = "" +
	"\n" +
	"\rapi/rag.proto\x12\x03rag\"\xf2\x01\n" +
	"\x12AddDocumentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x1c\n" +
	"\tembedding\x18\x04 \x03(\x02R\tembedding\x12A\n" +
	"\bmetadata\x18\x05 \x03(\v2%.rag.AddDocumentRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x13AddDocumentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"n\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x121\n" +
	"\x14similarity_threshold\x18\x03 \x01(\x02R\x13similarityThreshold\"`\n" +
	"\x0eSearchResponse\x12-\n" +
	"\aresults\x18\x01 \x03(\v2\x13.rag.DocumentResultR\aresults\x12\x1f\n" +
	"\vtotal_found\x18\x02 \x01(\x05R\n" +
	"totalFound\"\xf7\x01\n" +
	"\x0eDocumentResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12)\n" +
	"\x10similarity_score\x18\x04 \x01(\x02R\x0fsimilarityScore\x12=\n" +
	"\bmetadata\x18\x05 \x03(\v2!.rag.DocumentResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\x12GetDocumentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\\\n" +
	"\x13GetDocumentResponse\x12/\n" +
	"\bdocument\x18\x01 \x01(\v2\x13.rag.DocumentResultR\bdocument\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"'\n" +
	"\x15DeleteDocumentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\x16DeleteDocumentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x16\n" +
	"\x14GetIndexStatsRequest\"\x8d\x01\n" +
	"\x15GetIndexStatsResponse\x12'\n" +
	"\x0ftotal_documents\x18\x01 \x01(\x05R\x0etotalDocuments\x12(\n" +
	"\x10index_size_bytes\x18\x02 \x01(\x03R\x0eindexSizeBytes\x12!\n" +
	"\flast_updated\x18\x03 \x01(\tR\vlastUpdated2\xdf\x02\n" +
	"\n" +
	"RagService\x12@\n" +
	"\vAddDocument\x12\x17.rag.AddDocumentRequest\x1a\x18.rag.AddDocumentResponse\x12:\n" +
	"\x0fSearchDocuments\x12\x12.rag.SearchRequest\x1a\x13.rag.SearchResponse\x12@\n" +
	"\vGetDocument\x12\x17.rag.GetDocumentRequest\x1a\x18.rag.GetDocumentResponse\x12I\n" +
	"\x0eDeleteDocument\x12\x1a.rag.DeleteDocumentRequest\x1a\x1b.rag.DeleteDocumentResponse\x12F\n" +
	"\rGetIndexStats\x12\x19.rag.GetIndexStatsRequest\x1a\x1a.rag.GetIndexStatsResponseB\aZ\x05./ragb\x06proto3"

var (
	file_api_rag_proto_rawDescOnce sync.Once
	file_api_rag_proto_rawDescData []byte
)

func file_api_rag_proto_rawDescGZIP() []byte {
	file_api_rag_proto_rawDescOnce.Do(func() {
		file_api_rag_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_rag_proto_rawDesc), len(file_api_rag_proto_rawDesc)))
	})
	return file_api_rag_proto_rawDescData
}

var file_api_rag_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_rag_proto_goTypes = []any{
	(*AddDocumentRequest)(nil),     // 0: rag.AddDocumentRequest
	(*AddDocumentResponse)(nil),    // 1: rag.AddDocumentResponse
	(*SearchRequest)(nil),          // 2: rag.SearchRequest
	(*SearchResponse)(nil),         // 3: rag.SearchResponse
	(*DocumentResult)(nil),         // 4: rag.DocumentResult
	(*GetDocumentRequest)(nil),     // 5: rag.GetDocumentRequest
	(*GetDocumentResponse)(nil),    // 6: rag.GetDocumentResponse
	(*DeleteDocumentRequest)(nil),  // 7: rag.DeleteDocumentRequest
	(*DeleteDocumentResponse)(nil), // 8: rag.DeleteDocumentResponse
	(*GetIndexStatsRequest)(nil),   // 9: rag.GetIndexStatsRequest
	(*GetIndexStatsResponse)(nil),  // 10: rag.GetIndexStatsResponse
	nil,                            // 11: rag.AddDocumentRequest.MetadataEntry
	nil,                            // 12: rag.DocumentResult.MetadataEntry
}
var file_api_rag_proto_depIdxs = []int32{
	11, // 0: rag.AddDocumentRequest.metadata:type_name -> rag.AddDocumentRequest.MetadataEntry
	4,  // 1: rag.SearchResponse.results:type_name -> rag.DocumentResult
	12, // 2: rag.DocumentResult.metadata:type_name -> rag.DocumentResult.MetadataEntry
	4,  // 3: rag.GetDocumentResponse.document:type_name -> rag.DocumentResult
	0,  // 4: rag.RagService.AddDocument:input_type -> rag.AddDocumentRequest
	2,  // 5: rag.RagService.SearchDocuments:input_type -> rag.SearchRequest
	5,  // 6: rag.RagService.GetDocument:input_type -> rag.GetDocumentRequest
	7,  // 7: rag.RagService.DeleteDocument:input_type -> rag.DeleteDocumentRequest
	9,  // 8: rag.RagService.GetIndexStats:input_type -> rag.GetIndexStatsRequest
	1,  // 9: rag.RagService.AddDocument:output_type -> rag.AddDocumentResponse
	3,  // 10: rag.RagService.SearchDocuments:output_type -> rag.SearchResponse
	6,  // 11: rag.RagService.GetDocument:output_type -> rag.GetDocumentResponse
	8,  // 12: rag.RagService.DeleteDocument:output_type -> rag.DeleteDocumentResponse
	10, // 13: rag.RagService.GetIndexStats:output_type -> rag.GetIndexStatsResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_rag_proto_init() }
func file_api_rag_proto_init() {
	if File_api_rag_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_rag_proto_rawDesc), len(file_api_rag_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_rag_proto_goTypes,
		DependencyIndexes: file_api_rag_proto_depIdxs,
		MessageInfos:      file_api_rag_proto_msgTypes,
	}.Build()
	File_api_rag_proto = out.File
	file_api_rag_proto_goTypes = nil
	file_api_rag_proto_depIdxs = nil
}
